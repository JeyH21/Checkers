import os,sys
def Eatme(st):#Нужно кушать
    eat=0
    global black, white, n, rev, rev2
    if (int(st[1])==int(st[3])+2 or int(st[1])==int(st[3])-2 )and(ord(st[0])==ord(st[2])+2 or ord(st[0])==ord(st[2])-2):
        d1=int(ord(st[2])+(ord(st[0])-ord(st[2]))/2)
        d2=int(int(st[3])+(int(st[1])-int(st[3]))/2)
        if poleigri[8-int(st[1])][ord(st[0])-64]==("бе") or poleigri[8-int(st[1])][ord(st[0])-64]==("че"): #если шашка
            if  ((poleigri[8-d2][d1-64]==rev)or (poleigri[8-d2][d1-64]==rev2)):
                eat=1
                if poleigri[8-int(st[1])][ord(st[0])-64]==("бе"):
                    black=black-1
                else:
                    white=white-1
                poleigri[int(8-int(st[3])-(int(st[1])-int(st[3]))/2)] [int(ord(st[2])+(ord(st[0])-ord(st[2]))/2-64)]="  "
                poleigri[8-int(st[3])][ord(st[2])-64]=poleigri[8-int(st[1])][ord(st[0])-64]
                poleigri[8-int(st[1])][ord(st[0])-64]="  "
                if  n%2==0 and int(st[3])==1:     # если дошел до конца поля то дамка
                       poleigri[8-int(st[3])][ord(st[2])-64]="ДЧ"
                elif n%2==1 and int(st[3])==8:
                       poleigri[8-int(st[3])][ord(st[2])-64]="ДБ"
                try:    
                    if  (((poleigri[8-int(st[3])+1][ord(st[2])-64+1]==rev or poleigri[8-int(st[3])+1][ord(st[2])-64+1]==rev2)and poleigri[8-int(st[3])+2][ord(st[2])-64+2]=="  ")
                       or ((poleigri[8-int(st[3])+1][ord(st[2])-64-1]==rev or poleigri[8-int(st[3])+1][ord(st[2])-64-1]==rev2)and poleigri[8-int(st[3])+2][ord(st[2])-64-2]=="  ")
                       or ((poleigri[8-int(st[3])-1][ord(st[2])-64+1]==rev or poleigri[8-int(st[3])-1][ord(st[2])-64+1]==rev2)and poleigri[8-int(st[3])-2][ord(st[2])-64+2]=="  ")
                       or ((poleigri[8-int(st[3])-1][ord(st[2])-64-1]==rev or poleigri[8-int(st[3])-1][ord(st[2])-64-1]==rev2)and poleigri[8-int(st[3])-2][ord(st[2])-64-2]=="  ")):
                       pole()
                       print("ешь еще раз")
                       xod(1,st)
                except IndexError:
                    pass
                #ЕСТ ДАМКА!!!!    ЕСТ ДАМКА!!!!    ЕСТ ДАМКА!!!!
    if  (abs(ord(st[0])-ord(st[2]))==abs(int(st[1])-int(st[3])))and poleigri[8-int(st[1])][ord(st[0])-64]==("ДБ") or poleigri[8-int(st[1])][ord(st[0])-64]==("ДЧ") :#если ход по диагонали
        a=(ord(st[0])-ord(st[2]))/abs(ord(st[0])-ord(st[2])) #изменение по вертикале
        b=-(int(st[1])-int(st[3]))/abs(int(st[1])-int(st[3])) #изменение по горизонтале
        stroka=[]
        mestorev=-1# место шашки,которую будет есть дамка
        for i in range(1,abs(int(st[1])-int(st[3])+1)):
            if (poleigri[int(8-int(st[1])+a*i)][int(ord(st[0])-64+b*i)]==rev)or(poleigri[int(8-int(st[1])+a*i)][int(ord(st[0])-64+b*i)]==rev2):
                mestorev=i
            stroka.append(poleigri[int(8-int(st[1])+a*i)][int(ord(st[0])-64+b*i)])
            print(poleigri[int(8-int(st[1])+a*i)][int(ord(st[0])-64+b*i)])
        try:
            for i in range(20):  #УДАЛЯЕМ ПРОБЕЛЫ,ЕСЛИ кол-во оставшихся элементов =1 то ход возможен
                stroka.remove('  ')
        except ValueError:
            pass
        if len(stroka)==1 and (stroka[0]==rev) or (stroka[0]==rev2):
            eat=1
            if poleigri[8-int(st[1])][ord(st[0])-64]==("ДБ"):
                black=black-1
            else:
                white=white-1
            poleigri[8-int(st[3])][ord(st[2])-64]=poleigri[8-int(st[1])][ord(st[0])-64]   
            poleigri[int(8-int(st[1]))][int(ord(st[0]))-64]="  "
            poleigri[int(8-int(st[1])+a*mestorev)][int(ord(st[0])-64+b*mestorev)]="  "
        else:
            eat=0
    return eat
def pole():   #функция для генерации поля
    os.system('cls')
    print("Осталось "+str(black)+" черных")
    print("Осталось "+str(white)+" белых")
    for i in range(8):
        print("  "+chr(ord("A")+i),end="") #нумерация сверху
    print("\n"+stroka)
    for i in range(1,9):
        print(str(9-i),end="") #нумерация сбоку
        print("|",end="")    
        for z in range(1,9):
            print(poleigri[i-1][z]+"|",end="") #из массива клеток получаем состояние клетки
        print(str(9-i)+"\n"+stroka) #нумерация сбоку 2
    for i in range(8):
        print("  "+chr(ord("A")+i),end="") #нумерация снизу
    print()
def xod(f,stold): #если f=1 то только есть
    global n, black, white, rev , rev2
    if n%2==1:
        igrok="белые"
        c=-1
        rev="че"   #rev хранит противоположный цвет нашей шашки
        rev2="ДЧ"
    else:
        igrok="черные"
        c=1
        rev="бе"
        rev2="ДБ"
    while 1: 
        while 1:  #цикл проверки правильности ввода хода
            st=input("Ходят "+igrok+"\n" ) #ход шашки
            st=st.strip() #убираем лишние пробелы в начале строки и в конце
            st=st.upper()
            if st=="GAMEOVER" and igrok=="белые":
                print("Белые сдаются")
                white=0
                break
            elif st=="GAMEOVER" and igrok=="черные":
                print("Черные сдаются")
                black=0
                break
            try:              #Проверяем правильность введенных данных
                if (f==0 or (f==1 and st[0:1]==stold[2:3])):
                    if(1<=int(st[1])<=8 and 1<=int(st[3])<=8)and ((64<=ord(st[0])<=72 and 64<=ord(st[2])<=72))and len(st)<5:
                        break
                    else: 
                         print("Нет такой позиции на доске")
                else:
                    print("Ешь той шашкой которой ел до этого")            
            except (IndexError , ValueError) :
                    print("Вы ничего не ввели,или ввели не правильно")
            #Проверяем возможность хода 
        if black==0 or white==0:
            break
        if  (n%2==1 and ((poleigri[8-int(st[1])][ord(st[0])-64]==("бе"))or (poleigri[8-int(st[1])][ord(st[0])-64]==("ДБ"))))or(n%2==0 and ((poleigri[8-int(st[1])][ord(st[0])-64]==("че"))or(poleigri[8-int(st[1])][ord(st[0])-64]==("ДЧ")))):
             if  poleigri[8-int(st[3])][ord(st[2])-64]==("  "):#проверка на занятость клетки
                if (int(st[1])==int(st[3])+c)and(ord(st[0])==ord(st[2])+1 or ord(st[0])==ord(st[2])-1)and f==0:#если ход по диагонали
                    poleigri[8-int(st[3])][ord(st[2])-64]=poleigri[8-int(st[1])][ord(st[0])-64]
                    poleigri[8-int(st[1])][ord(st[0])-64]="  "
                    if  n%2==0 and int(st[3])==1:     # если дошел до конца поля то дамка
                        poleigri[8-int(st[3])][ord(st[2])-64]="ДЧ"
                    elif n%2==1 and int(st[3])==8:
                        poleigri[8-int(st[3])][ord(st[2])-64]="ДБ"
                    break
            #ХОДИТ ДАМКА!!!!!!!!!            #ХОДИТ ДАМКА!!!!!!!!!             #ХОДИТ ДАМКА!!!!!!!!!
                elif (poleigri[8-int(st[1])][ord(st[0])-64]=="ДБ")or(poleigri[8-int(st[1])][ord(st[0])-64]=="ДЧ"): #Ход дамки
                    if abs(ord(st[0])-ord(st[2]))==abs(int(st[1])-int(st[3])): #если ход по диагонали
                        b=-(ord(st[0])-ord(st[2]))/abs(ord(st[0])-ord(st[2])) #изменение по горизонтале
                        a=(int(st[1])-int(st[3]))/abs(int(st[1])-int(st[3])) #изменение по вертикале
                        xodDamki=1 #Если ходДамки равен 1 то на её пути нет препятствий
                        for i in range(1,abs(int(st[1])-int(st[3]))):
                            print(poleigri[int(8-int(st[1])+a*i)][int(ord(st[0])-64+b*i)])
                            if poleigri[int(8-int(st[1])+a*i)][int(ord(st[0])-64+b*i)]!="  ":
                                xodDamki=0
                                break
                        if xodDamki==1:
                            poleigri[8-int(st[3])][ord(st[2])-64]=poleigri[8-int(st[1])][ord(st[0])-64]
                            poleigri[8-int(st[1])][ord(st[0])-64]="  "
                            break
                        elif Eatme(st)==1:
                           break
                    else:
                        print("Данный ход невозможен для дамки")
                elif Eatme(st)==1: #КУШАТЬ ШАШКА
                    break
                else:
                   print("Данный ход невозможен")   
             else:
                print("Данная клетка занята")
        else:
             print("Играйте своими фигурами")
             #МЕНЮ ПРОГРАММЫ И ЗАПУСК ИГРЫ  МЕНЮ ПРОГРАММЫ И ЗАПУСК ИГРЫ!!!!!!!!!!!!!!!      
while 1:
    print("Вас приветствует программа шашки\nЕсли вы хотите сыграть наберите play\nдля того чтобы прочитать правила наберите rules\nдля выхода наберите exit")
    command=input()
    command=command.strip()
    if command=="play":
        os.system('cls')
        print("""Для того-чтобы сделать ход введите комманду вида A3B4,где A1 это
фигура,которой вы ходите ,а B3 место куда вы хотите ходить,
для того чтобы завершить игру наберите gameover.
Для продолжения нажмите enter
УДАЧИ""")
        input()
        black=12 #кол-во шашек
        white=12
        stroka=" +"+8*"--+"
        mas=[]  #масив одной строки поля
        poleigri=[] #массив клеток поля
        n=1 #номер хода
        c=0# константа для белых -1 для черных 1 ,нужна потому что белые ходят вверх ,а черные вниз
        for i in range(8):#генерация массива с клетками
            mas=[]
            mas.append("><")
            for z in range(8):
               if (z+i)%2==1  and i<3:  #черные(вверхние) шашки
                   mas.append("че")
               elif(z+i)%2==1 and i>4:  #белые(нижние) шашки
                   mas.append("бе")
               elif(z+i)%2==0:
                   mas.append("><")#пустое место
               else:
                   mas.append("  ")
            mas.append("><")
            poleigri.append(mas)
        while 1:
            if black==0:
                print("Белые выиграли \n")
                break
            elif white==0:
                print("Черные выиграли \n")
                break
            pole()
            xod(0,"")
            n=n+1
    elif command=="rules":
        os.system('cls')
        print( """
Игровое поле представляет собой квадратную доску размером 8x8 клеток,
подобную шахматной.Вертикали (столбцы) обозначаются латинскими буквами
от a до h, а горизонтали (строки) - цифрами от 1 до 8. В отличие от
шахмат игровыми считаются не все ,а только темные поля
Например, поле a1 - игровое, а поле c4 - нет.

Каждая из сторон в начале игры имеет по 12 шашек. Шашки расставляютс
на трех,ближайших к игрокам, горизонталях. В частности, белые шашки
располагаются наполях a1, c1, e1, g1, b2, d2, f2, h2, a3, c3, e3 и
g3, а черные, соответственно,на полях h8, f8, d8, b8, g7, e7, c7, a7,
h6, f6, d6 и b6.

Два центральных ряда полей остаются свободными.Здесь, на этих полях,
происходит сближение и первое соприкосновение противостоящих сил,
здесь с первых же ходов разворачивается борьба за обладание центром,
что дает весомое преимущество в шашках.Противники ходят поочередно,
перемещая шашки своего цвета по игровымполям.Первыми начинают белые.
Возникающие на доске ситуации называют позициями, или положениями.
Проведенная от начала и до завершения игра называется партией, а
передвижения шашек - ходами.Выигрывает та сторона,которой удалось
уничтожить или заблокировать движение всех шашек противника.

Простые шашки
    
Простая шашка может совершать, в зависимости от позиции, ходы типов:
тихие и ударные. 
Тихий ход - перемещение на одно поле вперед по диагонали. Тихий ход
возможен, если соответствующее поле свободно и нигде на доске не
требуется выполнить взятие шашки противника. Например, правильным
ходом из начальной позиции будет движение шашки с поля c3 например
на d4 (в нотации партии это обозначается как c3-d4), или на b4 (c3-b4).

Ударный ход (бой шашки противника) - перемещение на два поля вперед
или назад по диагонали, через шашку противника. Шашка при своем ходе
обязана побить (взять) шашку противника, если та находится на соседнем
(по диагонали) поле и если следующее за ней поле свободно.Берущая шашка
становится на это свободное поле, перескакивая через вражескую шашку,
которая снимается с доски. Взятие может совершаться не только вперед, но
и назад.

Если после взятия одной шашки оказывается возможным побить еще
одну шашку противника, взятие продолжается, то есть в один прием
(за один ход) шашка должна побить столько шашек соперника, сколько их стоит
на ее пути. Взятия в русских шашках обязательны.

При возможности взятия в разных направлениях выбор, вне зависимости
от количества или качества снимаемых шашек, предоставляется берущему
игроку. При взятии нескольких шашек противника снимать их с доски можно
только после завершения своего ударного хода. Запрещается при взятии
перескакивать более одного раза бьющей шашкой (дамкой) через одну и ту
же шашку соперника (а вот на свободное поле наступать несколько раз
разрешается).

Дамки

Если простая шашка достигает последней горизонтали, она становится дамкой.
Дамки, в отличие от обычных шашек, способны перемещаться на произвольное
количество полей по выбранной диагонали, причем как вперед, так и назад.

Дамка при своем ходе обязана взять шашку соперника (как вперед, так и назад) 
независимо от количества свободных полей до нее, если только эта шашка
находится  на одной диагонали с дамкой и за этой шашкой имеется одно или
несколько свободных полей. Причем в последнем случае дамка, совершив
взятие шашки противника, может остановиться на любом из них.

Если же при взятии на любой из пересекающихся диагоналей также находятся
шашки соперника, за которыми имеются свободные поля,то дамка обязана
продолжать взятие и этих шашек, сколько бы их ни находилось на ее пути.

Так же, как и в случае с простыми шашками, при наличии нескольких
способов выполнения ударного хода (одной и той же или разными дамками),
выбор последнего остается за берущим игроком.

Если обычная шашка достигает последней горизонтали в результате боя шашки
противника (где ей полагается превращаться в дамку), и если ей
предоставляется возможность дальнейшего взятия вражеских шашек, то она
обязана тем же ходом продолжать бой, но уже на правах дамки. Обратите
внимание: это правило действует лишь в том случае, если шашка достигает
последней горизонтали в результате ударного хода.В случае, если простая
шашка достигнет последнего ряда без взятия и ей после этого представится
возможность боя, то она должна бить (если такая возможность сохранится)
лишь следующим ходом.\n\n\n""")
    elif command=="exit":
        sys.exit()
    else:
        os.system('cls')
        print("нет такой комманды попробуйте ещё раз\n")


